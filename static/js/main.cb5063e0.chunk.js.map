{"version":3,"sources":["App.js","index.js"],"names":["TextArea","props","value","text","onChange","e","setText","target","console","log","id","TextOutput","marked","setOptions","breaks","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","App","useState","className","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAkEA,SAASA,EAASC,GAKhB,OACE,8BACE,0BACEC,MAAOD,EAAME,KACbC,SARe,SAACC,GACpBJ,EAAMK,QAAQD,EAAEE,OAAOL,OACvBM,QAAQC,IAAIJ,EAAEE,OAAOL,QAOjBQ,GAAG,aAMX,SAASC,EAAWV,GAIlB,OAHAW,IAAOC,WAAW,CAChBC,QAAQ,IAGR,qBAAKJ,GAAG,SAAR,SACE,qBACEA,GAAG,UACHK,wBAAyB,CACvBC,OAAQC,IAAUC,SAASN,IAAOX,EAAME,YAOnCgB,MA7Ff,WACE,IADa,EA6CWC,mBA5CP,smCADJ,mBA6CNjB,EA7CM,KA6CAG,EA7CA,KA+Cb,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKC,MAAM,WAAX,UACE,oBAAIA,MAAM,aAAV,6BACA,oBAAIA,MAAM,SAAV,wBAEF,sBAAKA,MAAM,UAAX,UACE,cAACtB,EAAD,CAAUM,QAASA,EAASH,KAAMA,IAClC,cAACQ,EAAD,CAAYR,KAAMA,WCxD1BoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb5063e0.chunk.js","sourcesContent":["import \"./App.css\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n  const [text, setText] = useState(placeholder);\n\n  return (\n    <div className=\"App\">\n      <div class=\"headings\">\n        <h1 class=\"text-input\">Enter text here</h1>\n        <h1 class=\"output\">Output:</h1>\n      </div>\n      <div class=\"content\">\n        <TextArea setText={setText} text={text} />\n        <TextOutput text={text} />\n      </div>\n    </div>\n  );\n}\n\nfunction TextArea(props) {\n  const handleChange = (e) => {\n    props.setText(e.target.value);\n    console.log(e.target.value);\n  };\n  return (\n    <div>\n      <textarea\n        value={props.text}\n        onChange={handleChange}\n        id=\"editor\"\n      ></textarea>\n    </div>\n  );\n}\n\nfunction TextOutput(props) {\n  marked.setOptions({\n    breaks: true,\n  });\n  return (\n    <div id=\"output\">\n      <div\n        id=\"preview\"\n        dangerouslySetInnerHTML={{\n          __html: DOMPurify.sanitize(marked(props.text)),\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}